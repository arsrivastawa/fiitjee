"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export const metadata = {
  title: "Add Topics",
  description: "Generated by create next app",
};

const AddTopic = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const router = useRouter();

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (email !== "info.bokaro@fiitjee.com" || password !== "fiitjeebokaro") {
      alert("Invalid email or password.");
      return;
    }

    if (!title || !description) {
      alert("Title and description are required.");
      return;
    }

    try {
      // Perform the topic addition logic here

      const res = await fetch("https://fiitjee-bokaro.vercel.app//api/topics", {
        method: "POST",
        headers: {
          "Content-type": "application/json",
        },
        body: JSON.stringify({ title, description }),
      });

      if (res.ok) {
        // Show toast notification
        toast.success("Topic added successfully");

        // Reset form inputs
        setTitle("");
        setDescription("");

        router.push("/notice");

        // Show alert
        window.alert("Topic added successfully"); // Show alert message
      } else {
        throw new Error("Failed to create a topic");
      }
    } catch (error) {
      console.log(error);
    }
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="">
      <div className="bg-[#F8FAFC] mb-10">
        <div className="bggg">
          <h1 className="text-5xl">Add Notices</h1>
          <span className="font-sm text-yellow">FIITJEE BOKARO </span>
        </div>
      </div>
      <div className="flex justify-center items-center mt-[3rem]">
        <form onSubmit={handleSubmit} className="flex flex-col gap-3 w-[80%]">
          <input
            onChange={(e) => setEmail(e.target.value)}
            value={email}
            className="border border-slate-500 px-8 py-2 rounded-lg"
            type="email"
            placeholder="Email"
          />

          <div className="relative">
            <input
              onChange={(e) => setPassword(e.target.value)}
              value={password}
              className="border border-slate-500 px-8 py-2 rounded-lg"
              type={showPassword ? "text" : "password"}
              placeholder="Password"
            />
            <button
              type="button"
              className="absolute top-1/2 right-3 transform -translate-y-1/2 text-gray-500"
              onClick={togglePasswordVisibility}
            >
              {showPassword ? "Hide" : "Show"}
            </button>
          </div>

          <input
            onChange={(e) => setTitle(e.target.value)}
            value={title}
            className="border border-slate-500 px-8 py-2 rounded-lg"
            type="text"
            placeholder="Notice Title"
          />

          <input
            onChange={(e) => setDescription(e.target.value)}
            value={description}
            className="border border-slate-500 px-8 py-2 rounded-lg"
            type="text"
            placeholder="Add Link"
          />

          <button
            type="submit"
            className="bg-blue font-bold text-white py-3 px-6 rounded-lg text-primary-light mb-10"
          >
            Add Topic
          </button>
        </form>
      </div>
    </div>
  );
};

export default AddTopic;
